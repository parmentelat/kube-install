apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- token: "${KUBEADM_TOKEN}"
  description: "default kubeadm bootstrap token"
  ttl: "0"
localAPIEndpoint:
  advertiseAddress: ${K8S_API_ADDVERTISE_IP_1}
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v${K8S_VERSION}
clusterName: ${K8S_CLUSTER_NAME}
controlPlaneEndpoint: ${K8S_API_ENDPOINT_INTERNAL}:6443
# this line is for when we call kubeadm certs phase only
# it gets removed eventually when kube-install.sh 
# installs it in /etc/kubernetes
certificatesDir: ${LOCAL_CERTS_DIR}
networking:
  podSubnet: 10.244.0.0/16
apiServer:
  certSANs:
  - ${K8S_API_ENDPOINT_INTERNAL}
  - ${K8S_API_ENDPOINT}

  # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
  # following option service-node-port-range useful to run aether
  extraArgs:
    service-node-port-range: "2000-36767"
    max-requests-inflight: "1000"
    max-mutating-requests-inflight: "500"
    default-watch-cache-size: "500"
    watch-cache-sizes: "persistentvolumeclaims#1000,persistentvolumes#1000"
    egress-selector-config-file: /etc/kubernetes/egress-selector-konnectivity.yaml

controllerManager:
  # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
  extraArgs:
    deployment-controller-sync-period: "50s"
# scheduler:
#   # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/
#   extraArgs:
#     address: 0.0.0.0
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
# kubelet specific options here
# see https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta3/
# and https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/
# Following allowedUnsafeSysctls option useful to run aether
allowedUnsafeSysctls: "net.*"
